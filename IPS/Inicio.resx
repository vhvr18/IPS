<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>